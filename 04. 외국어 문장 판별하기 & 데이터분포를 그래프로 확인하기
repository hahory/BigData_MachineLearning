from sklearn import svm, metrics
import glob,os.path,re,json

#텍스트를 읽어들이고 출현 빈도를 조사하기
def check_freq(fname):
    name=os.path.basename(fname)
    lang=re.match(r'^[a-z]{2,}',name).group()
    with open(fname,'r',encoding='utf-8') as f:
        text=f.read()
    text=text.lower()#소문자변환
    #숫자 세기 변수(cnt) 초기화하기
    cnt=[0 for n in range(0, 26)]
    code_a=ord('a')
    code_z=ord('z')
    #알파벳 출현 횟수 구하기
    #ord()를 이용하면 문자를 Unicode codepoint로 바꿀 수 있음
    for ch in text:
        n=ord(ch)
        if code_a<=n<=code_z: #a-z사이에 있을 때
            cnt[n-code_a]+=1
    #정규화하기
    total=sum(cnt)
    freq=list(map(lambda n:n/total,cnt))
    return(freq, lang)

#각 파일 처리하기
def load_files(path):
    freqs=[]
    labels=[]
    file_list=glob.glob(path)
    for fname in file_list:
        r=check_freq(fname)
        freqs.append(r[0])
        labels.append(r[1])
    return{'freqs':freqs, 'labels':labels}

data=load_files('C:/BigData/work/Python_Bigdata/ch04/lang/lang/train/*.txt')
test=load_files('C:/BigData/work/Python_Bigdata/ch04/lang/lang/test/*.txt')

#이후를 대비해서 json으로 결과 저장하기
with open('C:/BigData/work/Python_Bigdata/ch04/lang/lang/freq.json','w',encoding='utf-8') as fp:
    json.dump([data, test], fp)

#학습하기
clf=svm.SVC()
clf.fit(data['freqs'],data['labels']) 

#예측하기
predict=clf.predict(test['freqs'])

#결과 테스트하기
ac_score=metrics.accuracy_score(test['labels'], predict)
cl_report=metrics.classification_report(test['labels'],predict)
print('정답률:', ac_score)
print('리포트:')
print(cl_report)
----------------------------------------------------------------------------------------------
import matplotlib.pyplot as plt
import pandas as pd
import json

#알파벳 출현빈도 데이터 읽어들이기
with open('C:/BigData/work/Python_Bigdata/ch04/lang/lang/freq.json','r',encoding='utf-8') as fp:
    freq=json.load(fp)

#언어마다 계산하기
lang_dic={}
for i, lbl in enumerate(freq[0]['labels']):
    fq=freq[0]['freqs'][i]
    if not (lbl in lang_dic):
        lang_dic[lbl]=fq
        continue
    for idx, v in enumerate(fq):
        lang_dic[lbl][idx]=(lang_dic[lbl][idx]+v)/2

#pandas의 DataFrame에 데이터넣기
asclist=[[chr(n) for n in range(97,97+26)]]
df=pd.DataFrame(lang_dic, index=asclist)

#그래프그리기
plt.style.use('ggplot')
df.plot(kind='bar', subplots=True,ylim=(0,0.15))
plt.savefig('lang-plot.png')
